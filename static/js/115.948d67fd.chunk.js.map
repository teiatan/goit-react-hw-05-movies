{"version":3,"file":"static/js/115.948d67fd.chunk.js","mappings":"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","sources":["components/cast/Cast.styled.js","components/cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","service/themoviedbApi.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Img = styled.img`\n    width: 100%;\n`;\n\nexport const Ul = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    gap: 10px;\n`;\n\nexport const Li = styled.li`\n    width: 160px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 5px;\n    border-radius: 10px/20px;\n    border: 10px solid pink;\n`;\n\nexport const H3 = styled.h3`\n    color: rgb(20, 150, 144);\n    font-size: 40px;\n    text-align: center;\n    padding: 10px;\n`;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { apiService } from \"service/themoviedbApi\";\nimport { Img, Ul, Li, H3 } from \"./Cast.styled\";\n\nexport function Cast () {\n    const [cast, setCast] = useState([]);\n    const { movieID } = useParams();\n\n    useEffect(() => {\n        apiService.getMovieActors(movieID)\n        .then( response => {\n          const actors = response.cast.map(actor => {\n            return({name: actor.name, character: actor.character, id: actor.credit_id, photo: actor.profile_path})\n          })\n          setCast(actors);\n        })\n    }, [movieID]);\n\n    return (\n        <>\n            <H3 className=\"isHidden\">Actors</H3>\n            {cast.length===0 ?\n            <p>There is no information about actors</p>\n            :\n            <Ul>\n                {cast.map(actor => {\n                    return (\n                        <Li key={actor.id}>\n                            <div>\n                                <h4>{actor.name}</h4>\n                                <p>Character: {actor.character}</p>\n                            </div>\n                            <Img src={actor.photo ? (`https://www.themoviedb.org/t/p/original/${actor.photo}`) : (\"https://i.ibb.co/VVFCdTD/image.jpg\")} alt={actor.name}></Img>\n                        </Li>\n                    )\n                })}\n            </Ul>\n            }\n        </>\n    )\n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","class ApiService {\n    apiKey = \"d31c9faeabd85b83726848cf0b50c5a1\";\n    baseUrl = \"https://api.themoviedb.org/3\";\n    mostPoularUrl = \"/trending/movie/day\";\n    byKeyWordUrl = \"/search/company\";\n    wholeMovieInformationUrl = \"/movie/\";\n    actorsUrl = \"/movies/\";\n    viewsUrl = \"/movie/\";\n \n\n    async getMostPopularMovies() {\n        let movies =[];\n        try {\n            await fetch(`${this.baseUrl}${this.mostPoularUrl}?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => {\n                movies = data.results;\n            });\n        } catch(error) {\n            console.log(`fetch error: ${error}`)\n        };\n        return(movies);\n    };\n\n    async getMoviesByKeyWord(keyWord) {\n        let moviesByKeyWord =null;\n        try {\n            await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${keyWord}`)\n            .then(response => response.json())\n            .then(data => moviesByKeyWord=data);\n        } catch(error) {\n            console.log(`fetch error: ${error}`)\n        };\n        console.log(moviesByKeyWord);\n        return(moviesByKeyWord);\n    };\n\n    async getWholeMovieInformation(id) {\n        let movieInfo = null;\n        try {\n            await fetch(`${this.baseUrl}${this.wholeMovieInformationUrl}${id}?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => movieInfo=data)\n\n        } catch(error) {\n            console.log(error)\n        }\n        return (movieInfo);\n    };\n\n    async getMovieCast(id) {\n        let movieCast = null;\n        try {\n            await fetch(`${this.baseUrl}${this.wholeMovieInformationUrl}${id}?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => movieCast=data)\n\n        } catch(error) {\n            console.log(error)\n        }\n        return (movieCast);\n    };\n\n    async getMovieReviews(id) {\n        let movieReviews = null;\n        try {\n            await fetch(`${this.baseUrl}/movie/${id}/reviews?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => movieReviews=data)\n        } catch(error) {\n            console.log(error)\n        }\n        return (movieReviews);\n    };\n\n    async getMovieActors(id) {\n        let cast = null;\n        try {\n            await fetch(`${this.baseUrl}/movie/${id}/credits?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => cast=data)\n        } catch(error) {\n            console.log(error)\n        }\n        return (cast);\n    };\n};\n\nexport const apiService = new ApiService();"],"names":["Img","styled","Ul","Li","H3","Cast","useState","cast","setCast","movieID","useParams","useEffect","apiService","then","response","actors","map","actor","name","character","id","credit_id","photo","profile_path","className","length","src","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ApiService","apiKey","baseUrl","mostPoularUrl","byKeyWordUrl","wholeMovieInformationUrl","actorsUrl","viewsUrl","movies","fetch","json","data","results","console","log","keyWord","moviesByKeyWord","movieInfo","movieCast","movieReviews"],"sourceRoot":""}