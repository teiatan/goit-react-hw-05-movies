{"version":3,"file":"static/js/621.5a619493.chunk.js","mappings":"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","sources":["components/reviews/Reviews.styled.js","components/reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","service/themoviedbApi.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Img = styled.img`\n    width: 100%;\n`;\n\nexport const Ul = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    gap: 10px;\n`;\n\nexport const Li = styled.li`\n    width: 100%;\n    padding: 5px;\n    border-radius: 10px 20px 30px 40px/30px;\n    border: 10px solid pink;\n`;\n\nexport const H3 = styled.h3`\n    color: rgb(20, 150, 144);\n    font-size: 40px;\n    text-align: center;\n    padding: 10px;\n`;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { apiService } from \"service/themoviedbApi\";\nimport { Li, Ul, H3 } from \"./Reviews.styled\";\n\nexport function Reviews () {\n    const [reviews, setReviews] = useState([]);\n    const { movieID } = useParams();\n\n    useEffect(() => {\n        apiService.getMovieReviews(movieID)\n        .then(response => {\n          const reviewsData = response.results.map(review => {return({author: review.author, review: review.content, id: review.id})})\n          setReviews(reviewsData);\n        })\n      }, [movieID]);\n\n    return(\n        <>\n            {reviews.length ===0 ?\n                <p> there are no reviews yet</p>\n                :\n                <>\n                    <H3 className=\"isHidden\">Reviews</H3> \n                    <Ul>\n                        {reviews.map(review => {\n                            return(\n                                <Li key={review.id}>\n                                    <h3>Author: {review.author}</h3>\n                                    <p>{review.review}</p>\n                                </Li>\n                            )\n                        })}\n                    </Ul>\n                </>\n            }\n        </>\n    )\n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","class ApiService {\n    apiKey = \"d31c9faeabd85b83726848cf0b50c5a1\";\n    baseUrl = \"https://api.themoviedb.org/3\";\n    mostPoularUrl = \"/trending/movie/day\";\n    byKeyWordUrl = \"/search/company\";\n    wholeMovieInformationUrl = \"/movie/\";\n    actorsUrl = \"/movies/\";\n    viewsUrl = \"/movie/\";\n \n\n    async getMostPopularMovies() {\n        let movies =[];\n        try {\n            await fetch(`${this.baseUrl}${this.mostPoularUrl}?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => {\n                movies = data.results;\n            });\n        } catch(error) {\n            console.log(`fetch error: ${error}`)\n        };\n        return(movies);\n    };\n\n    async getMoviesByKeyWord(keyWord) {\n        let moviesByKeyWord =null;\n        try {\n            await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${this.apiKey}&query=${keyWord}`)\n            .then(response => response.json())\n            .then(data => moviesByKeyWord=data);\n        } catch(error) {\n            console.log(`fetch error: ${error}`)\n        };\n        console.log(moviesByKeyWord);\n        return(moviesByKeyWord);\n    };\n\n    async getWholeMovieInformation(id) {\n        let movieInfo = null;\n        try {\n            await fetch(`${this.baseUrl}${this.wholeMovieInformationUrl}${id}?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => movieInfo=data)\n\n        } catch(error) {\n            console.log(error)\n        }\n        return (movieInfo);\n    };\n\n    async getMovieCast(id) {\n        let movieCast = null;\n        try {\n            await fetch(`${this.baseUrl}${this.wholeMovieInformationUrl}${id}?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => movieCast=data)\n\n        } catch(error) {\n            console.log(error)\n        }\n        return (movieCast);\n    };\n\n    async getMovieReviews(id) {\n        let movieReviews = null;\n        try {\n            await fetch(`${this.baseUrl}/movie/${id}/reviews?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => movieReviews=data)\n        } catch(error) {\n            console.log(error)\n        }\n        return (movieReviews);\n    };\n\n    async getMovieActors(id) {\n        let cast = null;\n        try {\n            await fetch(`${this.baseUrl}/movie/${id}/credits?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => cast=data)\n        } catch(error) {\n            console.log(error)\n        }\n        return (cast);\n    };\n};\n\nexport const apiService = new ApiService();"],"names":["Ul","styled","Li","H3","Reviews","useState","reviews","setReviews","movieID","useParams","useEffect","apiService","then","response","reviewsData","results","map","review","author","content","id","length","className","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ApiService","apiKey","baseUrl","mostPoularUrl","byKeyWordUrl","wholeMovieInformationUrl","actorsUrl","viewsUrl","movies","fetch","json","data","console","log","keyWord","moviesByKeyWord","movieInfo","movieCast","movieReviews","cast"],"sourceRoot":""}